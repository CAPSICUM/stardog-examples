group = "com.complexible.stardog.examples.api"

dependencies {
	// server core modules
	compile "com.complexible.stardog.core:stardog:${stardogVersion}"
	compile "com.complexible.stardog.security:stardog-core-security:${stardogVersion}"
	compile "com.complexible.stardog.logging:stardog-logging:${stardogVersion}"
	compile "com.complexible.stardog.icv:stardog-icv-core:${stardogVersion}"
	compile "com.complexible.stardog.reasoning:stardog-reasoning-core:${stardogVersion}"
	compile "com.complexible.stardog.search:stardog-search-waldo:${stardogVersion}"
	compile "com.complexible.stardog.sesame:stardog-sesame-core:${stardogVersion}"
	compile "com.complexible.stardog.versioning:stardog-versioning-core:${stardogVersion}"
	compile "com.complexible.stardog.watchdog:stardog-watchdog-core:${stardogVersion}"
	compile "com.complexible.stardog.skos:stardog-skos:${stardogVersion}"
	compile "com.complexible.stardog.prov:stardog-prov:${stardogVersion}"

	// server snarl modules
	compile "com.complexible.stardog.protocols.snarl:stardog-protocols-snarl-server:${stardogVersion}"
	compile "com.complexible.stardog.icv.snarl:stardog-icv-protocols-snarl-server:${stardogVersion}"
	compile "com.complexible.stardog.reasoning.snarl:stardog-reasoning-protocols-snarl-server:${stardogVersion}"
	compile "com.complexible.stardog.versioning.snarl:stardog-versioning-protocols-snarl-server:${stardogVersion}"
	compile "com.complexible.stardog.watchdog.snarl:stardog-watchdog-protocols-snarl-server:${stardogVersion}"

	// client api modules
	compile "com.complexible.stardog.reasoning:stardog-reasoning-api:${stardogVersion}"
	compile "com.complexible.stardog.icv:stardog-icv-api:${stardogVersion}"
	compile "com.complexible.stardog.icv:stardog-icv-api_snarl:${stardogVersion}"
	compile "com.complexible.stardog.search:stardog-search-api:${stardogVersion}"
	compile "com.complexible.stardog.jena:stardog-jena:${stardogVersion}"
	compile "com.complexible.stardog.repair:stardog-repair:${stardogVersion}"
	compile "com.complexible.stardog.versioning:stardog-versioning-api:${stardogVersion}"
	compile "com.complexible.stardog.sesame:stardog-sesame-core:${stardogVersion}"

	// client snarl modules
	compile "com.complexible.stardog.protocols.snarl:stardog-protocols-snarl-client:${stardogVersion}"
	compile "com.complexible.stardog.icv.snarl:stardog-icv-protocols-snarl-client:${stardogVersion}"
	compile "com.complexible.stardog.reasoning.snarl:stardog-reasoning-protocols-snarl-client:${stardogVersion}"
	compile "com.complexible.stardog.search.snarl:stardog-search-protocols-snarl-client:${stardogVersion}"
	compile "com.complexible.stardog.versioning.snarl:stardog-versioning-protocols-snarl-client:${stardogVersion}"
	compile "com.complexible.stardog.watchdog.snarl:stardog-watchdog-protocols-snarl-client:${stardogVersion}"
}

task execute(type:JavaExec) {

	if (project.hasProperty("mainClass")) {
		main = project.mainClass
	}
	else {
		main = "com.complexible.stardog.examples.api.ConnectionAPIExample"
	}

	classpath = sourceSets.main.runtimeClasspath

	if (project.hasProperty("stardogHome")) {
		jvmArgs = [ "-Dstardog.home=${project.stardogHome}" ]
	}
	else {
		jvmArgs = [ "-Dstardog.home=${project.stardogPath}" ]
	}
}

task executeAll << {
	sourceSets.main.allJava.each { File aFile ->
		runExample aFile.getAbsolutePath()
	}
}

task docs << {
	exec {
		commandLine "docco",
					"-o",
					"${distPath}/docs",
					"${srcPath}/com/complexible/stardog/examples/api/ConnectionAPIExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/ConnectionPoolsExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/ExplanationExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/WaldoAPIExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/VersioningExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/ReasoningExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/ProvSkosExample.java",
					"${srcPath}/com/complexible/stardog/examples/api/ICVExample.java",
					"${srcPath}/com/complexible/stardog/examples/sesame/SesameExample.java",
					"${srcPath}/com/complexible/stardog/examples/jena/JenaExample.java"
	}
}

def runExample(String example) {
	// replace / with .
	String fqcn = example.replaceAll(System.getProperty("file.separator"), ".");
	// strip .java
	fqcn = fqcn.substring(0, fqcn.length() - 5);
	fqcn = fqcn.substring(fqcn.indexOf("com.complexible"));

	javaexec {

		main = fqcn

		classpath = project(':examples:api').sourceSets.main.runtimeClasspath

		if (project.hasProperty("stardogHome")) {
			jvmArgs = [ "-Dstardog.home=${stardogHome}" ]
		}
		// else stardog will attempt to use its own $STARDOG_HOME
	}
}
